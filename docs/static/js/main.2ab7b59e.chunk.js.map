{"version":3,"sources":["components/AddCategory.tsx","helpers/getGifs.ts","components/GifGridItem.tsx","components/GifGrid.tsx","hooks/useFetchGifs.ts","GifExpertApp.tsx","index.tsx"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItems","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","i","GifGridItem","GifExpertApp","categoria","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAiCeA,EA3BK,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,YAAwB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAgB1C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACnCN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCXlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAACC,GAAc,IAAD,EAChC,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QARvB,kBAWZL,GAXY,4CAAH,sDCwBLQ,EAXM,SAAC,GAAkC,IAAD,IAAhCN,IAASE,GAAuB,EAA1BD,GAA0B,EAAvBC,OAAMC,EAAiB,EAAjBA,IAGlC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCEDQ,EAfC,SAAC,GAAuB,IAAtBpB,EAAqB,EAArBA,SAAqB,ECHX,SAACA,GAAmB,IAAD,EACjBd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAH8B,mBACpCC,EADoC,KAC7BC,EAD6B,KAW3C,OANAC,qBAAU,WACLzB,EAAQC,GAAUyB,MAAK,SAAAC,GAAI,OAAGH,EAAS,CACnChB,KAAMmB,EACNL,SAAS,SAEhB,CAACrB,IACIsB,EDNyBK,CAAa3B,GAAhCc,EAFsB,EAE5BP,KAAcc,EAFc,EAEdA,QAErB,OACI,qCACA,6BAAKrB,IACJqB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SACQH,EAAOL,KAAI,SAACmB,GAAD,OAAW,cAACC,EAAD,CAAwBnB,IAAG,eAAMkB,IAAfA,EAAEjB,aEK3CmB,EAhBM,WAAO,IAAD,EAES5C,mBAAS,CAAC,gBAFnB,mBAEhBc,EAFgB,KAENf,EAFM,KAIvB,OACI,qCACI,kDACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBACA,6BACKe,EAASS,KAAI,SAAAsB,GAAS,OAAI,cAAC,EAAD,CAAyB/B,SAAU+B,GAArBA,Y,MCPzDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2ab7b59e.chunk.js","sourcesContent":["import React,{ChangeEvent, Dispatch, FormEvent, SetStateAction, useState} from 'react';\r\n\r\ninterface Props{\r\n    setCategory: Dispatch<SetStateAction<string[]>>\r\n}\r\n\r\nconst AddCategory = ({setCategory}: Props) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategory(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async (category: string) =>{\r\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ju4jVWyfBJnhJM4l1hhufg8rb1yNLBsT`;\r\n    const resp = await fetch(URL);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map((img: any) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    })\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\ninterface Props{\r\n    img: Item,\r\n   \r\n}\r\n\r\ninterface Item{\r\n    id:string,\r\n    title: string,\r\n    url: string\r\n}\r\n\r\nconst GifGridItems = ({img: {id,title,url}}: Props) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItems\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\ninterface Props{\r\n    category: any\r\n}\r\nconst GifGrid = ({category}: Props) => {\r\n\r\n    const {data: images ,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h1>{category}</h1>\r\n        {loading && <p>Loading...</p>}\r\n        <div className=\"card-grid\">\r\n               {images.map((i:any) => <GifGridItem key={i.id} img={{...i}}/>)}\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState,useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category: any) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n         getGifs(category).then(imgs=> setState({\r\n             data: imgs,\r\n             loading: false\r\n         }));\r\n    },[category])\r\n    return state;\r\n}","import React,{useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [category, setCategory] = useState(['Dragon Ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Arthur's Gif App</h2>\r\n            <AddCategory setCategory={setCategory}/>\r\n            <hr/>\r\n            <ol>\r\n                {category.map(categoria => <GifGrid key={categoria} category={categoria}/>)}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//Components\nimport GifExpertApp from './GifExpertApp';\n//Styles\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}